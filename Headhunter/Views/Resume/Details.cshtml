@model Headhunter.Models.Resume

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Resume</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Ф.И.О
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Category)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.JobPosition)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.JobPosition)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ExpectedSalary)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ExpectedSalary)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Telegram)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Telegram)
        </dd>

        @if (Model.Facebook != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Facebook)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Facebook)
            </dd>
        }
        @if (Model.LinkedIn != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.LinkedIn)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.LinkedIn)
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Updated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Updated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsPublished)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsPublished)
        </dd>

        <div class="row">
            @foreach (var m in Model.Modules)
            {
                <div class="card col-3" style="width: 18rem;">
                    <div class="card-body">
                        <h5 class="card-title">@m.Type</h5>
                        <p class="card-text">Место: @m.PlaceName</p>
                    </div>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item">Должность: @m.JobPosition</li>
                        <li class="list-group-item">Обязанности: @m.Responsibilities</li>
                        <li class="list-group-item">Год прохождения: @m.WorkingYear</li>
                    </ul>
                </div>
                <div class="card-body">
                    @if (User.Identity.Name == Model.User.Name)
                    {
                        <a asp-action="Edit" asp-controller="Module" asp-route-moduleId="@m.Id">Изменить</a>
                        <a asp-action="Delete" asp-controller="Module" asp-route-id="@m.Id">Удалить</a>
                    }
                </div>
            }
        </div>
    </dl>
    @if (User.Identity.Name == Model.User.Name)
    {
        <button id="module" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#myModal">Добавить модуль</button>
        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
    }
    else
    {
        <div>
            <button id="edit" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#myModal">Откликнуться</button>
        </div>
    }
</div>


<div class="modal" id="myModal" tabindex="-1">
    <div class="modal-dialog">
        <div id="module-body" class="modal-content">

        </div>
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.7.1.js"
        integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4="
        crossorigin="anonymous">
</script>

<script>
    function loadResumes() {
        $.ajax({
            url: '@Url.Action("Apply", "Resume")',
            type: 'GET',
            data: { 'resumeId': @Model.Id},
            success: function (data) {
                $('#module-body').html(data);
                console.log('resumes uploaded');
            },
            error: function () {
                console.log('error');
            }
        });
    }

    loadResumes();

    setInterval(loadResumes, 10000);

    $('#module').on('click', function () {
        event.preventDefault();
        $.ajax({
            url: '@Url.Action("Create", "Module")',
            type: 'GET',
            data: {'resumeId':@Model.Id},
            success: function (data) {
                $('#module-body').html(data);
                console.log('module uploaded');
            },
            error: function () {
                console.log('modules error');
            }
        });
    });

    
</script>